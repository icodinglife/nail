group 'com.nail'
version '1.0-SNAPSHOT'

buildscript {
//    ext.kotlin_version = '1.2.21'
    ext.quasar_version = '0.7.7'
    ext.quasar_jdk_version = ':jdk8'
    ext.springboot_version = '1.5.10.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springboot_version}")
    }
}

apply plugin: 'idea'
apply plugin: 'java'
//apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    quasar
}

dependencies {
    // kotlin
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // quasar
    compile "co.paralleluniverse:quasar-core:$quasar_version$quasar_jdk_version"
    compile "co.paralleluniverse:quasar-actors:$quasar_version"

    // spring boot
    compile 'org.springframework.boot:spring-boot-starter'

    // quasar runtime plugin
    quasar "co.paralleluniverse:quasar-core:$quasar_version$quasar_jdk_version@jar"

    // kryo
    compile "com.esotericsoftware:kryo:4.0.1"

    // fast-json
    compile "com.alibaba:fastjson:1.2.46"
}

//compileKotlin {
//    kotlinOptions.jvmTarget = "1.8"
//}
//compileTestKotlin {
//    kotlinOptions.jvmTarget = "1.8"
//}

mainClassName = "com.nail.App"

if (project.hasProperty('method')) {
    apply from: "${project.hasProperty('method')}.gradle"
} else {
    apply from: "agent.gradle"
}